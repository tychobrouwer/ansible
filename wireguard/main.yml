---
- name: Install Wireguard
  hosts: all

  vars_files:
    - vars.yml

  vars:
    wireguard_package: wireguard

  pre_tasks:
    - name: Overwrite vars for Red Hat
      set_fact:
        wireguard_package: wireguard-tools
      when: ansible_os_family == "RedHat"

    - name: Update cache if needed (Debian)
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Update packages
      ansible.builtin.package:
        name: "*"
        state: latest

  tasks:
    - name: Ensure EPEL is installed (RedHat)
      ansible.builtin.package:
        name:
          - epel-release
        state: present
      when: ansible_os_family == "RedHat"

    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - iptables
          - git
          - "{{ wireguard_package }}"
        state: present

    - name: Ensure required Python packages are available
      ansible.builtin.pip:
        name:
          - ifcfg
          - flask
          - icmplib
          - gunicorn
          - flask_qrcode

    - name: Ensure ip forwarding is set
      ansible.builtin.command: sysctl -w net.ipv4.ip_forward=1
      changed_when: false

    - name: Copy wg0 config file to remote
      ansible.builtin.copy:
        src: ./wg0.conf
        dest: /etc/wireguard/wg0.conf
        mode: '0644'

    - name: Enable wg0 wireguard systemd service
      ansible.builtin.systemd:
        name: wg-quick@wg0.service
        state: reloaded
        enabled: true

    - name: Git clone wireguard dashboard repository
      ansible.builtin.git:
        repo: "{{ dashboard_git_repo }}"
        dest: "{{ dashboard_install_location }}"
        clone: true
        force: true
        depth: 1

    - name: Set wg deamon executable
      ansible.builtin.file:
        path: "{{ dashboard_install_location }}/src/wgd.sh"
        mode: u+x

    - name: Install wg dashboard
      ansible.builtin.command: "{{ dashboard_install_location }}/src/wgd.sh install"
      changed_when: false

    - name: Copy wg dashboard config file to remote
      ansible.builtin.copy:
        src: ./wg-dashboard.ini
        dest: "{{ dashboard_install_location }}/src/wg-dashboard.ini"
        mode: '0644'

    - name: Ensure wg dashboard service file is on remote (systemd)
      ansible.builtin.copy:
        src: ./wg-dashboard.service
        dest: /etc/systemd/system/wg-dashboard.service
        mode: '0664'
      when: not ansible_distribution == "CentOS"

    - name: Ensure wg dashboard service file is on remote (sysvinit)
      ansible.builtin.copy:
        src: ./wg-dashboard
        dest: /etc/init.d/wg-dashboard
        mode: '0755'
      when: ansible_distribution == "CentOS"

    - name: Ensure wg dashboard service is enabled and started
      ansible.builtin.service:
        name: wg-dashboard
        state: started
        enabled: true
