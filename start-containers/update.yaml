---
- name: Ensure containers are updated
  hosts:
    - proxmox
    - infrastructure
    - entertainment
    - projects

  tasks:
    - name: Update cache if needed (Debian)
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Update packages
      ansible.builtin.package:
        name: "*"
        state: latest

    - name: Run apt autoremove and clean (Debian)
      apt:
        clean: yes
        autoremove: yes
      when: ansible_os_family == "Debian"

- name: Install NVIDIA drivers proxmox host
  hosts: proxmox

  vars_files:
    - vars.yaml

  tasks:
    - name: Reboot
      ansible.builtin.reboot:
        msg: "Rebooting to install NVIDIA drivers"
        post_reboot_delay: 30

    - name: Get proxmox version
      ansible.builtin.command: uname -r
      changed_when: false
      register: proxmox_info

    - name: Install proxmox headers
      ansible.builtin.apt:
        name: "proxmox-headers-{{ proxmox_info.stdout }}"
        state: present

    # tutorial: https://theorangeone.net/posts/lxc-nvidia-gpu-passthrough/
    - name: Ensure NVIDIA installer is present
      ansible.builtin.get_url:
        url: "{{ NVIDIA_download_url }}"
        dest: "/root/NVIDIA-Linux-x86_64-{{ NVIDIA_version }}.run"
        mode: "0755"

    - name: Check if NVIDIA is installed
      ansible.builtin.command: "nvidia-smi"
      register: nvidia_result
      failed_when: false
      changed_when: false

    - name: Run NVIDIA installer
      ansible.builtin.command: "/root/NVIDIA-Linux-x86_64-{{ NVIDIA_version }}.run -asq"
      failed_when: false
      when: "'command not found' in nvidia_result.stdout or 'NVIDIA-SMI has failed' in nvidia_result.stdout"

    - name: ensure NVIDIA rules are present
      ansible.builtin.copy:
        src: ./files/70-nvidia.rules
        dest: /etc/udev/rules.d/70-nvidia.rules
        mode: "0644"

    - name: Add NVIDIA and nvidia_uvm to modules
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/modules.conf
        block: |
          nvidia
          nvidia_uvm
          vfio
          vfio_iommu_type1
          vfio_pci
          vfio_virqfd

    - name: Update initramfs
      ansible.builtin.command: update-initramfs -u
      changed_when: false
      when: "'command not found' in nvidia_result.stdout"

    - name: Get guid of nvidia files
      ansible.builtin.shell: "ls -l /dev/nvidia* | awk '{print $5}' | uniq | grep . | tr -d -c '0-9\n'"
      register: nvidia_guid
      changed_when: false

    - name: Add nvidia guids to lxc 111 config
      ansible.builtin.blockinfile:
        path: /etc/pve/lxc/111.conf
        block: |
          lxc.cgroup2.devices.allow: c {{ nvidia_guid.stdout_lines[0] }}:* rwm
          lxc.cgroup2.devices.allow: c {{ nvidia_guid.stdout_lines[1] }}:* rwm
          lxc.cgroup2.devices.allow: c {{ nvidia_guid.stdout_lines[2] }}:* rwm
          lxc.mount.entry: /dev/nvidia0 dev/nvidia0 none bind,optional,create=file
          lxc.mount.entry: /dev/nvidiactl dev/nvidiactl none bind,optional,create=file
          lxc.mount.entry: /dev/nvidia-uvm dev/nvidia-uvm none bind,optional,create=file
          lxc.mount.entry: /dev/nvidia-modeset dev/nvidia-modeset none bind,optional,create=file
          lxc.mount.entry: /dev/nvidia-uvm-tools dev/nvidia-uvm-tools none bind,optional,create=file
          lxc.mount.entry: /dev/nvidia-caps/nvidia-cap1 dev/nvidia-caps/nvidia-cap1 none bind,optional,create=file
          lxc.mount.entry: /dev/nvidia-caps/nvidia-cap2 dev/nvidia-caps/nvidia-cap2 none bind,optional,create=file

- name: Install NVIDIA drivers jellyfin
  hosts: jellyfin

  vars_files:
    - vars.yaml

  tasks:
    # tutorial: https://theorangeone.net/posts/lxc-nvidia-gpu-passthrough/
    - name: Ensure NVIDIA installer is present
      ansible.builtin.get_url:
        url: "{{ NVIDIA_download_url }}"
        dest: "/root/NVIDIA-Linux-x86_64-{{ NVIDIA_version }}.run"
        mode: "0755"

    - name: Run NVIDIA installer
      ansible.builtin.command: "/root/NVIDIA-Linux-x86_64-{{ NVIDIA_version }}.run -asq --no-kernel-module"
      register: nvidia_installer
      changed_when: "'appears to already be loaded' not in nvidia_installer.stdout"

- name: Reboot proxmox host
  hosts: proxmox

  tasks:
    - name: Reboot
      ansible.builtin.reboot:
        msg: "Rebooting to install NVIDIA drivers"
        post_reboot_delay: 30

    - name: fix container issues
      ansible.builtin.shell: "/root/fix-container-issues.sh"
