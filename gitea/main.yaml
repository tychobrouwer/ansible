---
- name: Initiate server
  hosts: gitea_server

  vars_files:
    - vars.yaml
    - vars-private.yaml

  pre_tasks:
    - name: Update cache if needed (Debian)
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Ensure packages are updated
      ansible.builtin.package:
        name: "*"
        state: latest

  tasks:
    - name: Add gitea git user
      ansible.builtin.user:
        name: gitea
        home: /home/gitea
        system: true
        shell: /bin/bash
        password: "!"
        comment: Git Version Control

    - name: Ensure repositories directory exists
      ansible.builtin.file:
        path: /home/gitea/repositories
        state: directory
        owner: gitea
        group: gitea
        mode: 0755

    - name: Ensure LFS directory exists
      ansible.builtin.file:
        path: /home/gitea/lfs
        state: directory
        owner: gitea
        group: gitea
        mode: 0755

    - name: Ensure gitea GPG signing key is installed
      ansible.builtin.apt_key:
        url: "{{ gitea_deb_gpg }}"
        state: present

    - name: Ensure gitea repository is added
      ansible.builtin.apt_repository:
        repo: "{{ gitea_deb_repo }}"
        state: present

    - name: Install gitea and database packages
      ansible.builtin.package:
        name:
          - git
          - gitea
          - postgresql
          - postgresql-contrib
        state: latest

    - name: Set postgresql password encryption
      ansible.builtin.lineinfile:
        path: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
        regexp: "^password_encryption = "
        insertafter: "^#password_encryption = "
        line: password_encryption = scram-sha-256

    - name: Create the gitea database user
      community.postgresql.postgresql_user:
        name: "{{ gitea_db_user }}"
        password: "{{ gitea_db_user_password }}"
      become: yes
      become_user: postgres
      become_method: su

    - name: Ensure a locale exists
      community.general.locale_gen:
        name: en_US.UTF-8
        state: present

    - name: Create the gitea database
      community.postgresql.postgresql_db:
        name: "{{ gitea_database }}"
        encoding: UTF-8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        template: template0
        owner: "{{ gitea_db_user }}"
      become: yes
      become_user: postgres
      become_method: su

    - name: Grant gitea user access to database
      community.postgresql.postgresql_pg_hba:
        dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
        contype: local
        users: "{{ gitea_db_user }}"
        databases: "{{ gitea_database }}"
        method: scram-sha-256
        create: true

    - name: Connect to database
      community.postgresql.postgresql_user:
        db: "{{ gitea_database }}"
        name: "{{ gitea_db_user }}"
      become: yes
      become_user: postgres
      become_method: su

    - name: Ensure gitea configuration file exists
      ansible.builtin.template:
        src: gitea-app.ini.j2
        dest: /var/lib/gitea/custom/conf/app.ini
        mode: 0644

    - name: Ensure gitea service is present
      ansible.builtin.copy:
        src: gitea.service
        dest: /etc/systemd/system/gitea.service
        mode: 0644

    - name: Ensure gitea service socket is present
      ansible.builtin.copy:
        src: gitea.main.socket
        dest: /etc/systemd/system/gitea.main.socket
        mode: 0644

    - name: Ensure gitea socket is enabled and running
      ansible.builtin.service:
        name: gitea.main.socket
        state: started
        enabled: yes

    - name: Ensure gitea service is enabled and running
      ansible.builtin.service:
        name: gitea
        state: started
        enabled: yes
